[
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForAuthenticationDto",
        "Type": "Entities.DTOs.UserDto.UserForAuthenticationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Register",
    "RelativePath": "api/Authentication/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForRegisterDto",
        "Type": "Entities.DTOs.UserDto.UserForRegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "CreateProductAsync",
    "RelativePath": "api/Product/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productDtoForInsertion",
        "Type": "Entities.DTOs.ProductDto.ProductDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "DeleteProductAsync",
    "RelativePath": "api/Product/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "GetProductAsync",
    "RelativePath": "api/Product/Get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "GetAllProductsAsync",
    "RelativePath": "api/Product/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ProductController",
    "Method": "UpdateProductAsync",
    "RelativePath": "api/Product/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "productDtoForUpdate",
        "Type": "Entities.DTOs.ProductDto.ProductDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.RoomController",
    "Method": "CreateRoomAsync",
    "RelativePath": "api/Room/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roomDto",
        "Type": "Entities.DTOs.RoomDto.RoomDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.RoomController",
    "Method": "DeleteRoomAsync",
    "RelativePath": "api/Room/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.RoomController",
    "Method": "GetRoomAsync",
    "RelativePath": "api/Room/Get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.RoomController",
    "Method": "GetAllRoomsAsync",
    "RelativePath": "api/Room/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.RoomController",
    "Method": "UpdateRoomAsync",
    "RelativePath": "api/Room/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "roomDto",
        "Type": "Entities.DTOs.RoomDto.RoomDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StoreController",
    "Method": "CreateStoreAsync",
    "RelativePath": "api/Store/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "storeDtoForInsertion",
        "Type": "Entities.DTOs.StoreDto.StoreDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StoreController",
    "Method": "DeleteStoreAsync",
    "RelativePath": "api/Store/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StoreController",
    "Method": "GetStoreAsync",
    "RelativePath": "api/Store/Get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StoreController",
    "Method": "GetAllStoresAsync",
    "RelativePath": "api/Store/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StoreController",
    "Method": "UpdateStoreAsync",
    "RelativePath": "api/Store/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "storeDto",
        "Type": "Entities.DTOs.StoreDto.StoreDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StructureController",
    "Method": "CreateStructureAsync",
    "RelativePath": "api/Structure/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "structureDto",
        "Type": "Entities.DTOs.StructureDto.StructureDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StructureController",
    "Method": "DeleteStructureAsync",
    "RelativePath": "api/Structure/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StructureController",
    "Method": "GetStructureAsync",
    "RelativePath": "api/Structure/Get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StructureController",
    "Method": "GetAllStructuresAsync",
    "RelativePath": "api/Structure/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.StructureController",
    "Method": "UpdateStructureAsync",
    "RelativePath": "api/Structure/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "structureDto",
        "Type": "Entities.DTOs.StructureDto.StructureDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserController",
    "Method": "ChangePasswordAsync",
    "RelativePath": "api/User/ChangePassword/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userDto",
        "Type": "Entities.DTOs.UserDto.UserDtoForChangePassword",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserController",
    "Method": "DeleteUserAsync",
    "RelativePath": "api/User/Delete/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserController",
    "Method": "GetUserAsync",
    "RelativePath": "api/User/Get/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserController",
    "Method": "GetAllUsersAsync",
    "RelativePath": "api/User/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserController",
    "Method": "UpdateUserAsync",
    "RelativePath": "api/User/Update/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userDtoForUpdate",
        "Type": "Entities.DTOs.UserDto.UserDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.WorkOrderController",
    "Method": "CreateWorkOrderAsync",
    "RelativePath": "api/WorkOrder/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "workOrder",
        "Type": "Entities.DTOs.WorkOrderDto.WorkOrderDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.WorkOrderController",
    "Method": "DeleteWorkOrderAsync",
    "RelativePath": "api/WorkOrder/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.WorkOrderController",
    "Method": "GetWorkOrderAsync",
    "RelativePath": "api/WorkOrder/Get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.WorkOrderController",
    "Method": "GetAllWorkOrdersAsync",
    "RelativePath": "api/WorkOrder/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.WorkOrderController",
    "Method": "UpdateWorkOrderAsync",
    "RelativePath": "api/WorkOrder/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "workOrder",
        "Type": "Entities.DTOs.WorkOrderDto.WorkOrderDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]